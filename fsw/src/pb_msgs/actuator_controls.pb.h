/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:06 2016. */

#ifndef PB_ACTUATOR_CONTROLS_PB_H_INCLUDED
#define PB_ACTUATOR_CONTROLS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX {
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_ROLL = 0,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_PITCH = 1,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_YAW = 2,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_THROTTLE = 3,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_FLAPS = 4,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_SPOILERS = 5,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_AIRBRAKES = 6,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_LANDING_GEAR = 7,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROLS = 8
} px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX;
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_MIN px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_INDEX_ROLL
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_MAX px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROLS
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ARRAYSIZE ((px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX)(px4_actuator_controls_pb_ACTUATOR_CONTROL_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROLS+1))

typedef enum _px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX {
    px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_GROUP_INDEX_ATTITUDE = 0,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_GROUP_INDEX_ATTITUDE_ALTERNATE = 1,
    px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROL_GROUPS = 4
} px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX;
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_MIN px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_GROUP_INDEX_ATTITUDE
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_MAX px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROL_GROUPS
#define _px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ARRAYSIZE ((px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX)(px4_actuator_controls_pb_ACTUATOR_CONTROL_GROUP_INDEX_ACTUATOR_CONTROL_NUM_ACTUATOR_CONTROL_GROUPS+1))

/* Struct definitions */
typedef struct _px4_actuator_controls_pb {
    uint64_t timestamp;
    uint64_t timestamp_sample;
    pb_size_t control_count;
    float control[8];
/* @@protoc_insertion_point(struct:px4_actuator_controls_pb) */
} px4_actuator_controls_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_actuator_controls_pb_init_default    {0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define px4_actuator_controls_pb_init_zero       {0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define px4_actuator_controls_pb_timestamp_tag   1
#define px4_actuator_controls_pb_timestamp_sample_tag 2
#define px4_actuator_controls_pb_control_tag     3

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_actuator_controls_pb_fields[4];

/* Maximum encoded size of messages (where known) */
#define px4_actuator_controls_pb_size            62

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ACTUATOR_CONTROLS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
