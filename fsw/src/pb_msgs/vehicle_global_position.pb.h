/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:17 2016. */

#ifndef PB_VEHICLE_GLOBAL_POSITION_PB_H_INCLUDED
#define PB_VEHICLE_GLOBAL_POSITION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _px4_vehicle_global_position_pb {
    uint64_t timestamp;
    uint64_t time_utc_usec;
    double lat;
    double lon;
    float alt;
    float vel_n;
    float vel_e;
    float vel_d;
    float yaw;
    float eph;
    float epv;
    float terrain_alt;
    float pressure_alt;
    bool terrain_alt_valid;
    bool dead_reckoning;
/* @@protoc_insertion_point(struct:px4_vehicle_global_position_pb) */
} px4_vehicle_global_position_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_vehicle_global_position_pb_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define px4_vehicle_global_position_pb_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_vehicle_global_position_pb_timestamp_tag 1
#define px4_vehicle_global_position_pb_time_utc_usec_tag 2
#define px4_vehicle_global_position_pb_lat_tag   3
#define px4_vehicle_global_position_pb_lon_tag   4
#define px4_vehicle_global_position_pb_alt_tag   5
#define px4_vehicle_global_position_pb_vel_n_tag 6
#define px4_vehicle_global_position_pb_vel_e_tag 7
#define px4_vehicle_global_position_pb_vel_d_tag 8
#define px4_vehicle_global_position_pb_yaw_tag   9
#define px4_vehicle_global_position_pb_eph_tag   10
#define px4_vehicle_global_position_pb_epv_tag   11
#define px4_vehicle_global_position_pb_terrain_alt_tag 12
#define px4_vehicle_global_position_pb_pressure_alt_tag 13
#define px4_vehicle_global_position_pb_terrain_alt_valid_tag 14
#define px4_vehicle_global_position_pb_dead_reckoning_tag 15

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_vehicle_global_position_pb_fields[16];

/* Maximum encoded size of messages (where known) */
#define px4_vehicle_global_position_pb_size      89

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define VEHICLE_GLOBAL_POSITION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
