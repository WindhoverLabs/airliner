/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Oct 29 18:16:28 2016. */

#ifndef PB_RC_PARAMETER_MAP_PB_H_INCLUDED
#define PB_RC_PARAMETER_MAP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_rc_parameter_map_pb_RC_PARAM_MAP {
    px4_rc_parameter_map_pb_RC_PARAM_MAP_RC_PARAM_MAP_NCHAN = 3,
    px4_rc_parameter_map_pb_RC_PARAM_MAP_PARAM_ID_LEN = 16
} px4_rc_parameter_map_pb_RC_PARAM_MAP;
#define _px4_rc_parameter_map_pb_RC_PARAM_MAP_MIN px4_rc_parameter_map_pb_RC_PARAM_MAP_RC_PARAM_MAP_NCHAN
#define _px4_rc_parameter_map_pb_RC_PARAM_MAP_MAX px4_rc_parameter_map_pb_RC_PARAM_MAP_PARAM_ID_LEN
#define _px4_rc_parameter_map_pb_RC_PARAM_MAP_ARRAYSIZE ((px4_rc_parameter_map_pb_RC_PARAM_MAP)(px4_rc_parameter_map_pb_RC_PARAM_MAP_PARAM_ID_LEN+1))

/* Struct definitions */
typedef struct _px4_rc_parameter_map_pb {
    uint64_t timestamp;
    pb_size_t param_index_count;
    int32_t param_index[3];
    pb_size_t scale_count;
    float scale[3];
    pb_size_t value0_count;
    float value0[3];
    pb_size_t value_min_count;
    float value_min[3];
    pb_size_t value_max_count;
    float value_max[3];
    pb_size_t valid_count;
    bool valid[3];
    char param_id[51];
/* @@protoc_insertion_point(struct:px4_rc_parameter_map_pb) */
} px4_rc_parameter_map_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_rc_parameter_map_pb_init_default     {0, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, ""}
#define px4_rc_parameter_map_pb_init_zero        {0, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}, ""}

/* Field tags (for use in manual encoding/decoding) */
#define px4_rc_parameter_map_pb_timestamp_tag    1
#define px4_rc_parameter_map_pb_param_index_tag  2
#define px4_rc_parameter_map_pb_scale_tag        3
#define px4_rc_parameter_map_pb_value0_tag       4
#define px4_rc_parameter_map_pb_value_min_tag    5
#define px4_rc_parameter_map_pb_value_max_tag    6
#define px4_rc_parameter_map_pb_valid_tag        7
#define px4_rc_parameter_map_pb_param_id_tag     8

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_rc_parameter_map_pb_fields[9];

/* Maximum encoded size of messages (where known) */
#define px4_rc_parameter_map_pb_size             163

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RC_PARAMETER_MAP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
