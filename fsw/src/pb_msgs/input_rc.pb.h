/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:13 2016. */

#ifndef PB_INPUT_RC_PB_H_INCLUDED
#define PB_INPUT_RC_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_input_rc_pb_RC_INPUT_SOURCE {
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_UNKNOWN = 0,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_PPM = 1,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4IO_PPM = 2,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4IO_SPEKTRUM = 3,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4IO_SBUS = 4,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4IO_ST24 = 5,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_MAVLINK = 6,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_QURT = 7,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_SPEKTRUM = 8,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_SBUS = 9,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_ST24 = 10,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_SUMD = 11,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4FMU_DSM = 12,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_PX4IO_SUMD = 13,
    px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_MAX_CHANNELS = 18
} px4_input_rc_pb_RC_INPUT_SOURCE;
#define _px4_input_rc_pb_RC_INPUT_SOURCE_MIN px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_UNKNOWN
#define _px4_input_rc_pb_RC_INPUT_SOURCE_MAX px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_MAX_CHANNELS
#define _px4_input_rc_pb_RC_INPUT_SOURCE_ARRAYSIZE ((px4_input_rc_pb_RC_INPUT_SOURCE)(px4_input_rc_pb_RC_INPUT_SOURCE_RC_INPUT_SOURCE_MAX_CHANNELS+1))

/* Struct definitions */
typedef struct _px4_input_rc_pb {
    uint64_t timestamp;
    uint64_t timestamp_publication;
    uint64_t timestamp_last_signal;
    uint32_t channel_count;
    int32_t rssi;
    uint32_t rc_lost_frame_count;
    uint32_t rc_total_frame_count;
    uint32_t rc_ppm_frame_length;
    pb_size_t values_count;
    uint32_t values[18];
    bool rc_failsafe;
    bool rc_lost;
    uint32_t input_source;
/* @@protoc_insertion_point(struct:px4_input_rc_pb) */
} px4_input_rc_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_input_rc_pb_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0}
#define px4_input_rc_pb_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_input_rc_pb_timestamp_tag            1
#define px4_input_rc_pb_timestamp_publication_tag 2
#define px4_input_rc_pb_timestamp_last_signal_tag 3
#define px4_input_rc_pb_channel_count_tag        4
#define px4_input_rc_pb_rssi_tag                 5
#define px4_input_rc_pb_rc_lost_frame_count_tag  6
#define px4_input_rc_pb_rc_total_frame_count_tag 7
#define px4_input_rc_pb_rc_ppm_frame_length_tag  8
#define px4_input_rc_pb_values_tag               9
#define px4_input_rc_pb_rc_failsafe_tag          10
#define px4_input_rc_pb_rc_lost_tag              11
#define px4_input_rc_pb_input_source_tag         12

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_input_rc_pb_fields[13];

/* Maximum encoded size of messages (where known) */
#define px4_input_rc_pb_size                     186

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define INPUT_RC_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
