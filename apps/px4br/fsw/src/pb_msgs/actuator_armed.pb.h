/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:06 2016. */

#ifndef PB_ACTUATOR_ARMED_PB_H_INCLUDED
#define PB_ACTUATOR_ARMED_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _px4_actuator_armed_pb {
    uint64_t timestamp;
    bool armed;
    bool prearmed;
    bool ready_to_arm;
    bool lockdown;
    bool force_failsafe;
    bool in_esc_calibration_mode;
/* @@protoc_insertion_point(struct:px4_actuator_armed_pb) */
} px4_actuator_armed_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_actuator_armed_pb_init_default       {0, 0, 0, 0, 0, 0, 0}
#define px4_actuator_armed_pb_init_zero          {0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_actuator_armed_pb_timestamp_tag      1
#define px4_actuator_armed_pb_armed_tag          2
#define px4_actuator_armed_pb_prearmed_tag       3
#define px4_actuator_armed_pb_ready_to_arm_tag   4
#define px4_actuator_armed_pb_lockdown_tag       5
#define px4_actuator_armed_pb_force_failsafe_tag 6
#define px4_actuator_armed_pb_in_esc_calibration_mode_tag 7

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_actuator_armed_pb_fields[8];

/* Maximum encoded size of messages (where known) */
#define px4_actuator_armed_pb_size               23

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ACTUATOR_ARMED_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
