/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:15 2016. */

#ifndef PB_RC_CHANNELS_PB_H_INCLUDED
#define PB_RC_CHANNELS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_rc_channels_pb_RC_CHANNELS_FUNCTION {
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_THROTTLE = 0,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_ROLL = 1,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_PITCH = 2,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_YAW = 3,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_MODE = 4,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_RETURN = 5,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_POSCTL = 6,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_LOITER = 7,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_OFFBOARD = 8,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_ACRO = 9,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_FLAPS = 10,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_AUX_1 = 11,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_AUX_2 = 12,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_AUX_3 = 13,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_AUX_4 = 14,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_AUX_5 = 15,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_PARAM_1 = 16,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_PARAM_2 = 17,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_PARAM_3_5 = 18,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_RATTITUDE = 19,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_KILLSWITCH = 20,
    px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_TRANSITION = 21
} px4_rc_channels_pb_RC_CHANNELS_FUNCTION;
#define _px4_rc_channels_pb_RC_CHANNELS_FUNCTION_MIN px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_THROTTLE
#define _px4_rc_channels_pb_RC_CHANNELS_FUNCTION_MAX px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_TRANSITION
#define _px4_rc_channels_pb_RC_CHANNELS_FUNCTION_ARRAYSIZE ((px4_rc_channels_pb_RC_CHANNELS_FUNCTION)(px4_rc_channels_pb_RC_CHANNELS_FUNCTION_RC_CHANNELS_FUNCTION_TRANSITION+1))

/* Struct definitions */
typedef struct _px4_rc_channels_pb {
    uint64_t timestamp;
    uint64_t timestamp_last_valid;
    pb_size_t channels_count;
    float channels[18];
    uint32_t frame_drop_count;
    uint32_t channel_count;
    pb_size_t function_count;
    int32_t function[22];
    uint32_t rssi;
    bool signal_lost;
/* @@protoc_insertion_point(struct:px4_rc_channels_pb) */
} px4_rc_channels_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_rc_channels_pb_init_default          {0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define px4_rc_channels_pb_init_zero             {0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_rc_channels_pb_timestamp_tag         1
#define px4_rc_channels_pb_timestamp_last_valid_tag 2
#define px4_rc_channels_pb_channels_tag          3
#define px4_rc_channels_pb_frame_drop_count_tag  4
#define px4_rc_channels_pb_channel_count_tag     5
#define px4_rc_channels_pb_function_tag          6
#define px4_rc_channels_pb_rssi_tag              7
#define px4_rc_channels_pb_signal_lost_tag       8

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_rc_channels_pb_fields[9];

/* Maximum encoded size of messages (where known) */
#define px4_rc_channels_pb_size                  374

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RC_CHANNELS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
