/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:09 2016. */

#ifndef PB_EKF2_INNOVATIONS_PB_H_INCLUDED
#define PB_EKF2_INNOVATIONS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _px4_ekf2_innovations_pb {
    uint64_t timestamp;
    pb_size_t vel_pos_innov_count;
    float vel_pos_innov[6];
    pb_size_t mag_innov_count;
    float mag_innov[3];
    float heading_innov;
    float airspeed_innov;
    pb_size_t flow_innov_count;
    float flow_innov[2];
    float hagl_innov;
    pb_size_t vel_pos_innov_var_count;
    float vel_pos_innov_var[6];
    pb_size_t mag_innov_var_count;
    float mag_innov_var[3];
    float heading_innov_var;
    float airspeed_innov_var;
    pb_size_t flow_innov_var_count;
    float flow_innov_var[2];
    float hagl_innov_var;
/* @@protoc_insertion_point(struct:px4_ekf2_innovations_pb) */
} px4_ekf2_innovations_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_ekf2_innovations_pb_init_default     {0, 0, {0, 0, 0, 0, 0, 0}, 0, {0, 0, 0}, 0, 0, 0, {0, 0}, 0, 0, {0, 0, 0, 0, 0, 0}, 0, {0, 0, 0}, 0, 0, 0, {0, 0}, 0}
#define px4_ekf2_innovations_pb_init_zero        {0, 0, {0, 0, 0, 0, 0, 0}, 0, {0, 0, 0}, 0, 0, 0, {0, 0}, 0, 0, {0, 0, 0, 0, 0, 0}, 0, {0, 0, 0}, 0, 0, 0, {0, 0}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_ekf2_innovations_pb_timestamp_tag    1
#define px4_ekf2_innovations_pb_vel_pos_innov_tag 2
#define px4_ekf2_innovations_pb_mag_innov_tag    3
#define px4_ekf2_innovations_pb_heading_innov_tag 4
#define px4_ekf2_innovations_pb_airspeed_innov_tag 5
#define px4_ekf2_innovations_pb_flow_innov_tag   6
#define px4_ekf2_innovations_pb_hagl_innov_tag   7
#define px4_ekf2_innovations_pb_vel_pos_innov_var_tag 8
#define px4_ekf2_innovations_pb_mag_innov_var_tag 9
#define px4_ekf2_innovations_pb_heading_innov_var_tag 10
#define px4_ekf2_innovations_pb_airspeed_innov_var_tag 11
#define px4_ekf2_innovations_pb_flow_innov_var_tag 12
#define px4_ekf2_innovations_pb_hagl_innov_var_tag 13

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_ekf2_innovations_pb_fields[14];

/* Maximum encoded size of messages (where known) */
#define px4_ekf2_innovations_pb_size             151

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define EKF2_INNOVATIONS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
