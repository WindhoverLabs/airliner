/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:10 2016. */

#ifndef PB_ESC_REPORT_PB_H_INCLUDED
#define PB_ESC_REPORT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _px4_esc_report_pb {
    uint64_t timestamp;
    uint32_t esc_errorcount;
    int32_t esc_rpm;
    float esc_voltage;
    float esc_current;
    float esc_temperature;
    float esc_setpoint;
    uint32_t esc_setpoint_raw;
    uint32_t esc_address;
    uint32_t esc_version;
    uint32_t esc_state;
    uint32_t esc_vendor;
/* @@protoc_insertion_point(struct:px4_esc_report_pb) */
} px4_esc_report_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_esc_report_pb_init_default           {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define px4_esc_report_pb_init_zero              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_esc_report_pb_timestamp_tag          1
#define px4_esc_report_pb_esc_errorcount_tag     2
#define px4_esc_report_pb_esc_rpm_tag            3
#define px4_esc_report_pb_esc_voltage_tag        4
#define px4_esc_report_pb_esc_current_tag        5
#define px4_esc_report_pb_esc_temperature_tag    6
#define px4_esc_report_pb_esc_setpoint_tag       7
#define px4_esc_report_pb_esc_setpoint_raw_tag   8
#define px4_esc_report_pb_esc_address_tag        9
#define px4_esc_report_pb_esc_version_tag        10
#define px4_esc_report_pb_esc_state_tag          11
#define px4_esc_report_pb_esc_vendor_tag         12

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_esc_report_pb_fields[13];

/* Maximum encoded size of messages (where known) */
#define px4_esc_report_pb_size                   78

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ESC_REPORT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
