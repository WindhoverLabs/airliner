/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:17 2016. */

#ifndef PB_VEHICLE_COMMAND_PB_H_INCLUDED
#define PB_VEHICLE_COMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_vehicle_command_pb_VEHICLE_CMD {
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CUSTOM_0 = 0,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CUSTOM_1 = 1,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CUSTOM_2 = 2,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_WAYPOINT = 16,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_LOITER_UNLIM = 17,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_LOITER_TURNS = 18,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_LOITER_TIME = 19,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_RETURN_TO_LAUNCH = 20,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_LAND = 21,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_TAKEOFF = 22,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_ROI = 80,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_PATHPLANNING = 81,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_VTOL_TAKEOFF = 84,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_VTOL_LAND = 85,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_GUIDED_LIMITS = 90,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_GUIDED_MASTER = 91,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_GUIDED_ENABLE = 92,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_NAV_LAST = 95,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CONDITION_DELAY = 112,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CONDITION_CHANGE_ALT = 113,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CONDITION_DISTANCE = 114,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CONDITION_YAW = 115,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CONDITION_LAST = 159,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_MODE = 176,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_JUMP = 177,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_CHANGE_SPEED = 178,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_HOME = 179,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_PARAMETER = 180,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_RELAY = 181,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_REPEAT_RELAY = 182,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_SERVO = 183,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_REPEAT_SERVO = 184,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_FLIGHTTERMINATION = 185,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_GO_AROUND = 191,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_REPOSITION = 192,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_PAUSE_CONTINUE = 193,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_CONTROL_VIDEO = 200,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_DIGICAM_CONTROL = 203,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_MOUNT_CONFIGURE = 204,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_MOUNT_CONTROL = 205,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_SET_CAM_TRIGG_DIST = 206,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_FENCE_ENABLE = 207,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_PARACHUTE = 208,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_INVERTED_FLIGHT = 210,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_MOUNT_CONTROL_QUAT = 220,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_GUIDED_MASTER = 221,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_GUIDED_LIMITS = 222,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_LAST = 240,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_CALIBRATION = 241,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_SET_SENSOR_OFFSETS = 242,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_STORAGE = 245,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_REBOOT_SHUTDOWN = 246,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_OVERRIDE_GOTO = 252,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_MISSION_START = 300,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_COMPONENT_ARM_DISARM = 400,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_START_RX_PAIR = 500,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_TRIGGER_CONTROL = 2003,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_DO_VTOL_TRANSITION = 3000,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PAYLOAD_PREPARE_DEPLOY = 30001,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PAYLOAD_CONTROL_DEPLOY = 30002,
    px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_UAVCAN = 243
} px4_vehicle_command_pb_VEHICLE_CMD;
#define _px4_vehicle_command_pb_VEHICLE_CMD_MIN px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_CUSTOM_0
#define _px4_vehicle_command_pb_VEHICLE_CMD_MAX px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_UAVCAN
#define _px4_vehicle_command_pb_VEHICLE_CMD_ARRAYSIZE ((px4_vehicle_command_pb_VEHICLE_CMD)(px4_vehicle_command_pb_VEHICLE_CMD_VEHICLE_CMD_PREFLIGHT_UAVCAN+1))

typedef enum _px4_vehicle_command_pb_VEHICLE_CMD_RESULT {
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_ACCEPTED = 0,
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED = 1,
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_DENIED = 2,
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_UNSUPPORTED = 3,
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_FAILED = 4,
    px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_ENUM_END = 5
} px4_vehicle_command_pb_VEHICLE_CMD_RESULT;
#define _px4_vehicle_command_pb_VEHICLE_CMD_RESULT_MIN px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_ACCEPTED
#define _px4_vehicle_command_pb_VEHICLE_CMD_RESULT_MAX px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_ENUM_END
#define _px4_vehicle_command_pb_VEHICLE_CMD_RESULT_ARRAYSIZE ((px4_vehicle_command_pb_VEHICLE_CMD_RESULT)(px4_vehicle_command_pb_VEHICLE_CMD_RESULT_VEHICLE_CMD_RESULT_ENUM_END+1))

typedef enum _px4_vehicle_command_pb_VEHICLE_MOUNT_MODE {
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_RETRACT = 0,
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_NEUTRAL = 1,
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_MAVLINK_TARGETING = 2,
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_RC_TARGETING = 3,
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_GPS_POINT = 4,
    px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_ENUM_END = 5
} px4_vehicle_command_pb_VEHICLE_MOUNT_MODE;
#define _px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_MIN px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_RETRACT
#define _px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_MAX px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_ENUM_END
#define _px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_ARRAYSIZE ((px4_vehicle_command_pb_VEHICLE_MOUNT_MODE)(px4_vehicle_command_pb_VEHICLE_MOUNT_MODE_VEHICLE_MOUNT_MODE_ENUM_END+1))

/* Struct definitions */
typedef struct _px4_vehicle_command_pb {
    uint64_t timestamp;
    double param5;
    double param6;
    float param1;
    float param2;
    float param3;
    float param4;
    float param7;
    uint32_t command;
    uint32_t target_system;
    uint32_t target_component;
    uint32_t source_system;
    uint32_t source_component;
    uint32_t confirmation;
/* @@protoc_insertion_point(struct:px4_vehicle_command_pb) */
} px4_vehicle_command_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_vehicle_command_pb_init_default      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define px4_vehicle_command_pb_init_zero         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_vehicle_command_pb_timestamp_tag     1
#define px4_vehicle_command_pb_param5_tag        2
#define px4_vehicle_command_pb_param6_tag        3
#define px4_vehicle_command_pb_param1_tag        4
#define px4_vehicle_command_pb_param2_tag        5
#define px4_vehicle_command_pb_param3_tag        6
#define px4_vehicle_command_pb_param4_tag        7
#define px4_vehicle_command_pb_param7_tag        8
#define px4_vehicle_command_pb_command_tag       9
#define px4_vehicle_command_pb_target_system_tag 10
#define px4_vehicle_command_pb_target_component_tag 11
#define px4_vehicle_command_pb_source_system_tag 12
#define px4_vehicle_command_pb_source_component_tag 13
#define px4_vehicle_command_pb_confirmation_tag  14

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_vehicle_command_pb_fields[15];

/* Maximum encoded size of messages (where known) */
#define px4_vehicle_command_pb_size              90

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define VEHICLE_COMMAND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
