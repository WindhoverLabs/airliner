/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Oct 26 00:46:16 2016. */

#ifndef PB_TECS_STATUS_PB_H_INCLUDED
#define PB_TECS_STATUS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _px4_tecs_status_pb_TECS_MODE {
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_NORMAL = 0,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_UNDERSPEED = 1,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_TAKEOFF = 2,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_LAND = 3,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_LAND_THROTTLELIM = 4,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_BAD_DESCENT = 5,
    px4_tecs_status_pb_TECS_MODE_TECS_MODE_CLIMBOUT = 6
} px4_tecs_status_pb_TECS_MODE;
#define _px4_tecs_status_pb_TECS_MODE_MIN px4_tecs_status_pb_TECS_MODE_TECS_MODE_NORMAL
#define _px4_tecs_status_pb_TECS_MODE_MAX px4_tecs_status_pb_TECS_MODE_TECS_MODE_CLIMBOUT
#define _px4_tecs_status_pb_TECS_MODE_ARRAYSIZE ((px4_tecs_status_pb_TECS_MODE)(px4_tecs_status_pb_TECS_MODE_TECS_MODE_CLIMBOUT+1))

/* Struct definitions */
typedef struct _px4_tecs_status_pb {
    uint64_t timestamp;
    float altitudeSp;
    float altitude_filtered;
    float flightPathAngleSp;
    float flightPathAngle;
    float flightPathAngleFiltered;
    float airspeedSp;
    float airspeed_filtered;
    float airspeedDerivativeSp;
    float airspeedDerivative;
    float totalEnergyError;
    float energyDistributionError;
    float totalEnergyRateError;
    float energyDistributionRateError;
    float throttle_integ;
    float pitch_integ;
    px4_tecs_status_pb_TECS_MODE mode;
/* @@protoc_insertion_point(struct:px4_tecs_status_pb) */
} px4_tecs_status_pb;

/* Default values for struct fields */

/* Initializer values for message structs */
#define px4_tecs_status_pb_init_default          {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (px4_tecs_status_pb_TECS_MODE)0}
#define px4_tecs_status_pb_init_zero             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (px4_tecs_status_pb_TECS_MODE)0}

/* Field tags (for use in manual encoding/decoding) */
#define px4_tecs_status_pb_timestamp_tag         1
#define px4_tecs_status_pb_altitudeSp_tag        2
#define px4_tecs_status_pb_altitude_filtered_tag 3
#define px4_tecs_status_pb_flightPathAngleSp_tag 4
#define px4_tecs_status_pb_flightPathAngle_tag   5
#define px4_tecs_status_pb_flightPathAngleFiltered_tag 6
#define px4_tecs_status_pb_airspeedSp_tag        7
#define px4_tecs_status_pb_airspeed_filtered_tag 8
#define px4_tecs_status_pb_airspeedDerivativeSp_tag 9
#define px4_tecs_status_pb_airspeedDerivative_tag 10
#define px4_tecs_status_pb_totalEnergyError_tag  11
#define px4_tecs_status_pb_energyDistributionError_tag 12
#define px4_tecs_status_pb_totalEnergyRateError_tag 13
#define px4_tecs_status_pb_energyDistributionRateError_tag 14
#define px4_tecs_status_pb_throttle_integ_tag    15
#define px4_tecs_status_pb_pitch_integ_tag       16
#define px4_tecs_status_pb_mode_tag              17

/* Struct field encoding specification for nanopb */
extern const pb_field_t px4_tecs_status_pb_fields[18];

/* Maximum encoded size of messages (where known) */
#define px4_tecs_status_pb_size                  90

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TECS_STATUS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
